
Aufgabe 1:

1.
Bevor eine App beendet wird kann sie dem Activity Manager Daten mitgeben, die sie zum wiederherstellen ihres Zustands braucht.
Diese Daten werden dann beim erneuten starten mitgegeben, sodass die App den Zustand wiederherstellen kann.

2.
In /etc/passwd werden die Benutzernamen Benutzer und Gruppen-Ids, Home-Verzeichnissen und start-Shells zugeordnet.
In /etc/shadow sind die Hashes der Passwörter gespeichert.
/etc/shadow ist für normale Benutzer nicht lesbar, damit ein Nutzer nicht mit brute-force des Passwort von z.b. root herausfinden und somit die Passwörter umgehen kann.

3.
Wenn ein setuid-Programm ausgeführt wird hat es die uid des Benutzers, der es gestartet hat, aber die effektive uid des Benutzers, dem die Datei gehört. Außerdem können root-Programme ihre uid und euid manipulieren.


Aufgabe 2:


1.
Pstat = 1V * 0.010A = 0.01W
Pdyn = 0.0000000015F * 1V^2 * 300000000Hz =  0.45W


2.
Pstat = 1.2V * 0.010A = 0.012W
Pdyn = 0.0000000015F * 1.2V^2 * 800000000Hz =  1.728W

3.
Pstat = 1.3V * 0.010A = 0.013W
Pdyn = 0.0000000015F * 1.3V^2 * 1000000000Hz =  2.535W



Aufgabe 3:

1.

Die Auslastung für CPU0 ohne T ist 220.
Damit hat CPU1 von den little-Kernen mehr Kapazität zur verfügung und würde für die little-Kerne zur Migration gewählt werden.

Bei den Big-Kernen hat CPU2 noch mehr Kapazität zur Verfügung, also würde der Task beim Verschieben auf die big-Kerne zu CPU2 gehen.

2.

Task bleibt auf dem selben Kern:

CPU0: 370 / 615 * 180 = 108
CPU1: 200 / 615 * 180 = 59
CPU2: 700 / 768 * 300 = 273
CPU3: 750 / 768 * 300 = 293
Gesamt: 733

Task zu CPU1:
CPU0: 220 / 615 * 180 = 64
CPU1: 350 / 615 * 180 = 102
CPU2: 700 / 768 * 300 = 273
CPU3: 750 / 768 * 300 = 293
Gesamt: 732


Task zu CPU2:

CPU0: 220 / 230 * 50 = 18
CPU1: 200 / 230 * 50 = 16
CPU2: 850 / 1024 * 400 = 332
CPU3: 750 / 1024 * 400 = 293
Gesamt: 659



3.
T sollte auf CPU2 platziert werden, damit CPU0 und CPU1 auf Leistungpunkt 1 abgesenkt werden können um damit Energie zu sparen.



